BufferAssignment:
allocation 0: size 6912, output shape is |bf16[4,864]|, maybe-live-out:
 value: <1 convert @0> (size=4608,offset=0): f32[4,288]{1,0}
 value: <7 convert.3 @0> (size=6912,offset=0): bf16[4,864]{1,0}
allocation 1: size 2304, parameter 0, shape |bf16[4,288]| at ShapeIndex {}:
 value: <0 args_0_.1 @0> (size=2304,offset=0): bf16[4,288]{1,0}
allocation 2: size 2304, parameter 1, shape |bf16[4,288]| at ShapeIndex {}:
 value: <2 args_1_.1 @0> (size=2304,offset=0): bf16[4,288]{1,0}
allocation 3: size 2304, parameter 2, shape |bf16[4,288]| at ShapeIndex {}:
 value: <4 args_2_.1 @0> (size=2304,offset=0): bf16[4,288]{1,0}
allocation 4: size 23040, preallocated-temp:
 value: <3 convert.1 @0> (size=4608,offset=13824): f32[4,288]{1,0}
 value: <5 convert.2 @0> (size=4608,offset=18432): f32[4,288]{1,0}
 value: <6 concatenate.1 @0> (size=13824,offset=0): f32[4,864]{1,0}

Total bytes used: 36864 (36.0KiB)

Used values:
<0 args_0_.1 @0>
 positions:
  args_0_.1
 uses:
  convert, operand 0
 from instruction: %args_0_.1 = bf16[4,288]{1,0} parameter(0), metadata={op_name="args[0]"}
<1 convert @0>
 positions:
  convert
 uses:
  concatenate.1, operand 0
 from instruction: %convert = f32[4,288]{1,0} convert(%args_0_.1)
<2 args_1_.1 @0>
 positions:
  args_1_.1
 uses:
  convert.1, operand 0
 from instruction: %args_1_.1 = bf16[4,288]{1,0} parameter(1), metadata={op_name="args[1]"}
<3 convert.1 @0>
 positions:
  convert.1
 uses:
  concatenate.1, operand 1
 from instruction: %convert.1 = f32[4,288]{1,0} convert(%args_1_.1)
<4 args_2_.1 @0>
 positions:
  args_2_.1
 uses:
  convert.2, operand 0
 from instruction: %args_2_.1 = bf16[4,288]{1,0} parameter(2), metadata={op_name="args[2]"}
<5 convert.2 @0>
 positions:
  convert.2
 uses:
  concatenate.1, operand 2
 from instruction: %convert.2 = f32[4,288]{1,0} convert(%args_2_.1)
<6 concatenate.1 @0>
 positions:
  concatenate.1
 uses:
  convert.3, operand 0
 from instruction: %concatenate.1 = f32[4,864]{1,0} concatenate(%convert, %convert.1, %convert.2), dimensions={1}, metadata={op_name="jit(concatenate)/concatenate" source_file="/home/eporat/benchmarking_qwen_omni_tpu/.venv/lib/python3.11/site-packages/tpu_inference/layers/vllm/linear_common.py" source_line=71 source_end_line=71 source_column=23 source_end_column=67}
<7 convert.3 @0>
 positions:
  convert.3
 uses:
 from instruction: %convert.3 = bf16[4,864]{1,0} convert(%concatenate.1)


HloLiveRange (max 8):
  InstructionSequence:
    0:args_0_.1
    1:args_1_.1
    2:args_2_.1
    3:convert
    4:convert.1
    5:convert.2
    6:concatenate.1
    7:convert.3
  BufferLiveRange:
    args_0_.1{}:0-8
    convert{}:3-6
    args_1_.1{}:0-8
    convert.1{}:4-6
    args_2_.1{}:0-8
    convert.2{}:5-6
    concatenate.1{}:6-7
    convert.3{}:7-8
  Live ranges at 7 (peak):
    concatenate.1{}: 13824 bytes (cumulative: 13824 bytes)
    convert.3{}: 6912 bytes (cumulative: 20736 bytes)
    args_0_.1{}: 2304 bytes (cumulative: 23040 bytes)
    args_1_.1{}: 2304 bytes (cumulative: 25344 bytes)
    args_2_.1{}: 2304 bytes (cumulative: 27648 bytes)
  Stack trace breakdown for peak usage: 27 648 bytes
    main.1 (100.0%, total: 27 648 bytes, current: 0 bytes, remaining: 27 648 bytes)
      ├── jit(concatenate)/concatenate (50.0%, total: 13 824 bytes, current: 13 824 bytes, remaining: 13 824 bytes)
      ├── convert.3 (25.0%, total: 6 912 bytes, current: 6 912 bytes, remaining: 6 912 bytes)
      ├── args[0] (8.3%, total: 2 304 bytes, current: 2 304 bytes, remaining: 4 608 bytes)
      ├── args[1] (8.3%, total: 2 304 bytes, current: 2 304 bytes, remaining: 2 304 bytes)
      └── args[2] (8.3%, total: 2 304 bytes, current: 2 304 bytes, remaining: 0 bytes)
