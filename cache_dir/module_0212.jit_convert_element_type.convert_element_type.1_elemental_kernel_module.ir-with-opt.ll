; ModuleID = '__compute_module_convert_element_type.1_elemental_kernel_module'
source_filename = "__compute_module_convert_element_type.1_elemental_kernel_module"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: uwtable
define noalias noundef ptr @convert_element_type.1_kernel(ptr readonly captures(none) %0) local_unnamed_addr #0 {
vector.ph:
  %args_gep = getelementptr inbounds nuw i8, ptr %0, i64 24
  %args = load ptr, ptr %args_gep, align 8
  %arg1_gep = getelementptr i8, ptr %args, i64 16
  %arg1 = load ptr, ptr %arg1_gep, align 8, !invariant.load !3, !dereferenceable !4, !align !5
  %arg0 = load ptr, ptr %args, align 8, !invariant.load !3, !dereferenceable !6, !align !5
  %1 = getelementptr inbounds nuw i8, ptr %arg0, i64 32
  %2 = getelementptr inbounds nuw i8, ptr %arg0, i64 64
  %3 = getelementptr inbounds nuw i8, ptr %arg0, i64 96
  %wide.load = load <8 x float>, ptr %arg0, align 64, !invariant.load !3, !noalias !7
  %wide.load4 = load <8 x float>, ptr %1, align 32, !invariant.load !3, !noalias !7
  %wide.load5 = load <8 x float>, ptr %2, align 64, !invariant.load !3, !noalias !7
  %wide.load6 = load <8 x float>, ptr %3, align 32, !invariant.load !3, !noalias !7
  %4 = bitcast <8 x float> %wide.load to <8 x i32>
  %5 = lshr <8 x i32> %4, splat (i32 16)
  %6 = and <8 x i32> %5, splat (i32 1)
  %7 = add nuw nsw <8 x i32> %6, splat (i32 32767)
  %8 = fcmp uno <8 x float> %wide.load, zeroinitializer
  %9 = and <8 x i32> %4, splat (i32 -8388608)
  %10 = or disjoint <8 x i32> %9, splat (i32 4194304)
  %11 = add <8 x i32> %7, %4
  %12 = select <8 x i1> %8, <8 x i32> %10, <8 x i32> %11
  %13 = lshr <8 x i32> %12, splat (i32 16)
  %14 = trunc nuw <8 x i32> %13 to <8 x i16>
  %15 = bitcast <8 x float> %wide.load4 to <8 x i32>
  %16 = lshr <8 x i32> %15, splat (i32 16)
  %17 = and <8 x i32> %16, splat (i32 1)
  %18 = add nuw nsw <8 x i32> %17, splat (i32 32767)
  %19 = fcmp uno <8 x float> %wide.load4, zeroinitializer
  %20 = and <8 x i32> %15, splat (i32 -8388608)
  %21 = or disjoint <8 x i32> %20, splat (i32 4194304)
  %22 = add <8 x i32> %18, %15
  %23 = select <8 x i1> %19, <8 x i32> %21, <8 x i32> %22
  %24 = lshr <8 x i32> %23, splat (i32 16)
  %25 = trunc nuw <8 x i32> %24 to <8 x i16>
  %26 = bitcast <8 x float> %wide.load5 to <8 x i32>
  %27 = lshr <8 x i32> %26, splat (i32 16)
  %28 = and <8 x i32> %27, splat (i32 1)
  %29 = add nuw nsw <8 x i32> %28, splat (i32 32767)
  %30 = fcmp uno <8 x float> %wide.load5, zeroinitializer
  %31 = and <8 x i32> %26, splat (i32 -8388608)
  %32 = or disjoint <8 x i32> %31, splat (i32 4194304)
  %33 = add <8 x i32> %29, %26
  %34 = select <8 x i1> %30, <8 x i32> %32, <8 x i32> %33
  %35 = lshr <8 x i32> %34, splat (i32 16)
  %36 = trunc nuw <8 x i32> %35 to <8 x i16>
  %37 = bitcast <8 x float> %wide.load6 to <8 x i32>
  %38 = lshr <8 x i32> %37, splat (i32 16)
  %39 = and <8 x i32> %38, splat (i32 1)
  %40 = add nuw nsw <8 x i32> %39, splat (i32 32767)
  %41 = fcmp uno <8 x float> %wide.load6, zeroinitializer
  %42 = and <8 x i32> %37, splat (i32 -8388608)
  %43 = or disjoint <8 x i32> %42, splat (i32 4194304)
  %44 = add <8 x i32> %40, %37
  %45 = select <8 x i1> %41, <8 x i32> %43, <8 x i32> %44
  %46 = lshr <8 x i32> %45, splat (i32 16)
  %47 = trunc nuw <8 x i32> %46 to <8 x i16>
  %48 = getelementptr inbounds nuw i8, ptr %arg1, i64 16
  %49 = getelementptr inbounds nuw i8, ptr %arg1, i64 32
  %50 = getelementptr inbounds nuw i8, ptr %arg1, i64 48
  store <8 x i16> %14, ptr %arg1, align 64, !alias.scope !7
  store <8 x i16> %25, ptr %48, align 16, !alias.scope !7
  store <8 x i16> %36, ptr %49, align 32, !alias.scope !7
  store <8 x i16> %47, ptr %50, align 16, !alias.scope !7
  %51 = getelementptr inbounds nuw i8, ptr %arg0, i64 128
  %52 = getelementptr inbounds nuw i8, ptr %arg0, i64 160
  %53 = getelementptr inbounds nuw i8, ptr %arg0, i64 192
  %54 = getelementptr inbounds nuw i8, ptr %arg0, i64 224
  %wide.load.1 = load <8 x float>, ptr %51, align 64, !invariant.load !3, !noalias !7
  %wide.load4.1 = load <8 x float>, ptr %52, align 32, !invariant.load !3, !noalias !7
  %wide.load5.1 = load <8 x float>, ptr %53, align 64, !invariant.load !3, !noalias !7
  %wide.load6.1 = load <8 x float>, ptr %54, align 32, !invariant.load !3, !noalias !7
  %55 = bitcast <8 x float> %wide.load.1 to <8 x i32>
  %56 = lshr <8 x i32> %55, splat (i32 16)
  %57 = and <8 x i32> %56, splat (i32 1)
  %58 = add nuw nsw <8 x i32> %57, splat (i32 32767)
  %59 = fcmp uno <8 x float> %wide.load.1, zeroinitializer
  %60 = and <8 x i32> %55, splat (i32 -8388608)
  %61 = or disjoint <8 x i32> %60, splat (i32 4194304)
  %62 = add <8 x i32> %58, %55
  %63 = select <8 x i1> %59, <8 x i32> %61, <8 x i32> %62
  %64 = lshr <8 x i32> %63, splat (i32 16)
  %65 = trunc nuw <8 x i32> %64 to <8 x i16>
  %66 = bitcast <8 x float> %wide.load4.1 to <8 x i32>
  %67 = lshr <8 x i32> %66, splat (i32 16)
  %68 = and <8 x i32> %67, splat (i32 1)
  %69 = add nuw nsw <8 x i32> %68, splat (i32 32767)
  %70 = fcmp uno <8 x float> %wide.load4.1, zeroinitializer
  %71 = and <8 x i32> %66, splat (i32 -8388608)
  %72 = or disjoint <8 x i32> %71, splat (i32 4194304)
  %73 = add <8 x i32> %69, %66
  %74 = select <8 x i1> %70, <8 x i32> %72, <8 x i32> %73
  %75 = lshr <8 x i32> %74, splat (i32 16)
  %76 = trunc nuw <8 x i32> %75 to <8 x i16>
  %77 = bitcast <8 x float> %wide.load5.1 to <8 x i32>
  %78 = lshr <8 x i32> %77, splat (i32 16)
  %79 = and <8 x i32> %78, splat (i32 1)
  %80 = add nuw nsw <8 x i32> %79, splat (i32 32767)
  %81 = fcmp uno <8 x float> %wide.load5.1, zeroinitializer
  %82 = and <8 x i32> %77, splat (i32 -8388608)
  %83 = or disjoint <8 x i32> %82, splat (i32 4194304)
  %84 = add <8 x i32> %80, %77
  %85 = select <8 x i1> %81, <8 x i32> %83, <8 x i32> %84
  %86 = lshr <8 x i32> %85, splat (i32 16)
  %87 = trunc nuw <8 x i32> %86 to <8 x i16>
  %88 = bitcast <8 x float> %wide.load6.1 to <8 x i32>
  %89 = lshr <8 x i32> %88, splat (i32 16)
  %90 = and <8 x i32> %89, splat (i32 1)
  %91 = add nuw nsw <8 x i32> %90, splat (i32 32767)
  %92 = fcmp uno <8 x float> %wide.load6.1, zeroinitializer
  %93 = and <8 x i32> %88, splat (i32 -8388608)
  %94 = or disjoint <8 x i32> %93, splat (i32 4194304)
  %95 = add <8 x i32> %91, %88
  %96 = select <8 x i1> %92, <8 x i32> %94, <8 x i32> %95
  %97 = lshr <8 x i32> %96, splat (i32 16)
  %98 = trunc nuw <8 x i32> %97 to <8 x i16>
  %99 = getelementptr inbounds nuw i8, ptr %arg1, i64 64
  %100 = getelementptr inbounds nuw i8, ptr %arg1, i64 80
  %101 = getelementptr inbounds nuw i8, ptr %arg1, i64 96
  %102 = getelementptr inbounds nuw i8, ptr %arg1, i64 112
  store <8 x i16> %65, ptr %99, align 64, !alias.scope !7
  store <8 x i16> %76, ptr %100, align 16, !alias.scope !7
  store <8 x i16> %87, ptr %101, align 32, !alias.scope !7
  store <8 x i16> %98, ptr %102, align 16, !alias.scope !7
  %103 = getelementptr inbounds nuw i8, ptr %arg0, i64 256
  %104 = getelementptr inbounds nuw i8, ptr %arg0, i64 288
  %105 = getelementptr inbounds nuw i8, ptr %arg0, i64 320
  %106 = getelementptr inbounds nuw i8, ptr %arg0, i64 352
  %wide.load.2 = load <8 x float>, ptr %103, align 64, !invariant.load !3, !noalias !7
  %wide.load4.2 = load <8 x float>, ptr %104, align 32, !invariant.load !3, !noalias !7
  %wide.load5.2 = load <8 x float>, ptr %105, align 64, !invariant.load !3, !noalias !7
  %wide.load6.2 = load <8 x float>, ptr %106, align 32, !invariant.load !3, !noalias !7
  %107 = bitcast <8 x float> %wide.load.2 to <8 x i32>
  %108 = lshr <8 x i32> %107, splat (i32 16)
  %109 = and <8 x i32> %108, splat (i32 1)
  %110 = add nuw nsw <8 x i32> %109, splat (i32 32767)
  %111 = fcmp uno <8 x float> %wide.load.2, zeroinitializer
  %112 = and <8 x i32> %107, splat (i32 -8388608)
  %113 = or disjoint <8 x i32> %112, splat (i32 4194304)
  %114 = add <8 x i32> %110, %107
  %115 = select <8 x i1> %111, <8 x i32> %113, <8 x i32> %114
  %116 = lshr <8 x i32> %115, splat (i32 16)
  %117 = trunc nuw <8 x i32> %116 to <8 x i16>
  %118 = bitcast <8 x float> %wide.load4.2 to <8 x i32>
  %119 = lshr <8 x i32> %118, splat (i32 16)
  %120 = and <8 x i32> %119, splat (i32 1)
  %121 = add nuw nsw <8 x i32> %120, splat (i32 32767)
  %122 = fcmp uno <8 x float> %wide.load4.2, zeroinitializer
  %123 = and <8 x i32> %118, splat (i32 -8388608)
  %124 = or disjoint <8 x i32> %123, splat (i32 4194304)
  %125 = add <8 x i32> %121, %118
  %126 = select <8 x i1> %122, <8 x i32> %124, <8 x i32> %125
  %127 = lshr <8 x i32> %126, splat (i32 16)
  %128 = trunc nuw <8 x i32> %127 to <8 x i16>
  %129 = bitcast <8 x float> %wide.load5.2 to <8 x i32>
  %130 = lshr <8 x i32> %129, splat (i32 16)
  %131 = and <8 x i32> %130, splat (i32 1)
  %132 = add nuw nsw <8 x i32> %131, splat (i32 32767)
  %133 = fcmp uno <8 x float> %wide.load5.2, zeroinitializer
  %134 = and <8 x i32> %129, splat (i32 -8388608)
  %135 = or disjoint <8 x i32> %134, splat (i32 4194304)
  %136 = add <8 x i32> %132, %129
  %137 = select <8 x i1> %133, <8 x i32> %135, <8 x i32> %136
  %138 = lshr <8 x i32> %137, splat (i32 16)
  %139 = trunc nuw <8 x i32> %138 to <8 x i16>
  %140 = bitcast <8 x float> %wide.load6.2 to <8 x i32>
  %141 = lshr <8 x i32> %140, splat (i32 16)
  %142 = and <8 x i32> %141, splat (i32 1)
  %143 = add nuw nsw <8 x i32> %142, splat (i32 32767)
  %144 = fcmp uno <8 x float> %wide.load6.2, zeroinitializer
  %145 = and <8 x i32> %140, splat (i32 -8388608)
  %146 = or disjoint <8 x i32> %145, splat (i32 4194304)
  %147 = add <8 x i32> %143, %140
  %148 = select <8 x i1> %144, <8 x i32> %146, <8 x i32> %147
  %149 = lshr <8 x i32> %148, splat (i32 16)
  %150 = trunc nuw <8 x i32> %149 to <8 x i16>
  %151 = getelementptr inbounds nuw i8, ptr %arg1, i64 128
  %152 = getelementptr inbounds nuw i8, ptr %arg1, i64 144
  %153 = getelementptr inbounds nuw i8, ptr %arg1, i64 160
  %154 = getelementptr inbounds nuw i8, ptr %arg1, i64 176
  store <8 x i16> %117, ptr %151, align 64, !alias.scope !7
  store <8 x i16> %128, ptr %152, align 16, !alias.scope !7
  store <8 x i16> %139, ptr %153, align 32, !alias.scope !7
  store <8 x i16> %150, ptr %154, align 16, !alias.scope !7
  %155 = getelementptr inbounds nuw i8, ptr %arg0, i64 384
  %156 = getelementptr inbounds nuw i8, ptr %arg0, i64 416
  %157 = getelementptr inbounds nuw i8, ptr %arg0, i64 448
  %158 = getelementptr inbounds nuw i8, ptr %arg0, i64 480
  %wide.load.3 = load <8 x float>, ptr %155, align 64, !invariant.load !3, !noalias !7
  %wide.load4.3 = load <8 x float>, ptr %156, align 32, !invariant.load !3, !noalias !7
  %wide.load5.3 = load <8 x float>, ptr %157, align 64, !invariant.load !3, !noalias !7
  %wide.load6.3 = load <8 x float>, ptr %158, align 32, !invariant.load !3, !noalias !7
  %159 = bitcast <8 x float> %wide.load.3 to <8 x i32>
  %160 = lshr <8 x i32> %159, splat (i32 16)
  %161 = and <8 x i32> %160, splat (i32 1)
  %162 = add nuw nsw <8 x i32> %161, splat (i32 32767)
  %163 = fcmp uno <8 x float> %wide.load.3, zeroinitializer
  %164 = and <8 x i32> %159, splat (i32 -8388608)
  %165 = or disjoint <8 x i32> %164, splat (i32 4194304)
  %166 = add <8 x i32> %162, %159
  %167 = select <8 x i1> %163, <8 x i32> %165, <8 x i32> %166
  %168 = lshr <8 x i32> %167, splat (i32 16)
  %169 = trunc nuw <8 x i32> %168 to <8 x i16>
  %170 = bitcast <8 x float> %wide.load4.3 to <8 x i32>
  %171 = lshr <8 x i32> %170, splat (i32 16)
  %172 = and <8 x i32> %171, splat (i32 1)
  %173 = add nuw nsw <8 x i32> %172, splat (i32 32767)
  %174 = fcmp uno <8 x float> %wide.load4.3, zeroinitializer
  %175 = and <8 x i32> %170, splat (i32 -8388608)
  %176 = or disjoint <8 x i32> %175, splat (i32 4194304)
  %177 = add <8 x i32> %173, %170
  %178 = select <8 x i1> %174, <8 x i32> %176, <8 x i32> %177
  %179 = lshr <8 x i32> %178, splat (i32 16)
  %180 = trunc nuw <8 x i32> %179 to <8 x i16>
  %181 = bitcast <8 x float> %wide.load5.3 to <8 x i32>
  %182 = lshr <8 x i32> %181, splat (i32 16)
  %183 = and <8 x i32> %182, splat (i32 1)
  %184 = add nuw nsw <8 x i32> %183, splat (i32 32767)
  %185 = fcmp uno <8 x float> %wide.load5.3, zeroinitializer
  %186 = and <8 x i32> %181, splat (i32 -8388608)
  %187 = or disjoint <8 x i32> %186, splat (i32 4194304)
  %188 = add <8 x i32> %184, %181
  %189 = select <8 x i1> %185, <8 x i32> %187, <8 x i32> %188
  %190 = lshr <8 x i32> %189, splat (i32 16)
  %191 = trunc nuw <8 x i32> %190 to <8 x i16>
  %192 = bitcast <8 x float> %wide.load6.3 to <8 x i32>
  %193 = lshr <8 x i32> %192, splat (i32 16)
  %194 = and <8 x i32> %193, splat (i32 1)
  %195 = add nuw nsw <8 x i32> %194, splat (i32 32767)
  %196 = fcmp uno <8 x float> %wide.load6.3, zeroinitializer
  %197 = and <8 x i32> %192, splat (i32 -8388608)
  %198 = or disjoint <8 x i32> %197, splat (i32 4194304)
  %199 = add <8 x i32> %195, %192
  %200 = select <8 x i1> %196, <8 x i32> %198, <8 x i32> %199
  %201 = lshr <8 x i32> %200, splat (i32 16)
  %202 = trunc nuw <8 x i32> %201 to <8 x i16>
  %203 = getelementptr inbounds nuw i8, ptr %arg1, i64 192
  %204 = getelementptr inbounds nuw i8, ptr %arg1, i64 208
  %205 = getelementptr inbounds nuw i8, ptr %arg1, i64 224
  %206 = getelementptr inbounds nuw i8, ptr %arg1, i64 240
  store <8 x i16> %169, ptr %203, align 64, !alias.scope !7
  store <8 x i16> %180, ptr %204, align 16, !alias.scope !7
  store <8 x i16> %191, ptr %205, align 32, !alias.scope !7
  store <8 x i16> %202, ptr %206, align 16, !alias.scope !7
  %207 = getelementptr inbounds nuw i8, ptr %arg0, i64 512
  %208 = getelementptr inbounds nuw i8, ptr %arg0, i64 544
  %209 = getelementptr inbounds nuw i8, ptr %arg0, i64 576
  %210 = getelementptr inbounds nuw i8, ptr %arg0, i64 608
  %wide.load.4 = load <8 x float>, ptr %207, align 64, !invariant.load !3, !noalias !7
  %wide.load4.4 = load <8 x float>, ptr %208, align 32, !invariant.load !3, !noalias !7
  %wide.load5.4 = load <8 x float>, ptr %209, align 64, !invariant.load !3, !noalias !7
  %wide.load6.4 = load <8 x float>, ptr %210, align 32, !invariant.load !3, !noalias !7
  %211 = bitcast <8 x float> %wide.load.4 to <8 x i32>
  %212 = lshr <8 x i32> %211, splat (i32 16)
  %213 = and <8 x i32> %212, splat (i32 1)
  %214 = add nuw nsw <8 x i32> %213, splat (i32 32767)
  %215 = fcmp uno <8 x float> %wide.load.4, zeroinitializer
  %216 = and <8 x i32> %211, splat (i32 -8388608)
  %217 = or disjoint <8 x i32> %216, splat (i32 4194304)
  %218 = add <8 x i32> %214, %211
  %219 = select <8 x i1> %215, <8 x i32> %217, <8 x i32> %218
  %220 = lshr <8 x i32> %219, splat (i32 16)
  %221 = trunc nuw <8 x i32> %220 to <8 x i16>
  %222 = bitcast <8 x float> %wide.load4.4 to <8 x i32>
  %223 = lshr <8 x i32> %222, splat (i32 16)
  %224 = and <8 x i32> %223, splat (i32 1)
  %225 = add nuw nsw <8 x i32> %224, splat (i32 32767)
  %226 = fcmp uno <8 x float> %wide.load4.4, zeroinitializer
  %227 = and <8 x i32> %222, splat (i32 -8388608)
  %228 = or disjoint <8 x i32> %227, splat (i32 4194304)
  %229 = add <8 x i32> %225, %222
  %230 = select <8 x i1> %226, <8 x i32> %228, <8 x i32> %229
  %231 = lshr <8 x i32> %230, splat (i32 16)
  %232 = trunc nuw <8 x i32> %231 to <8 x i16>
  %233 = bitcast <8 x float> %wide.load5.4 to <8 x i32>
  %234 = lshr <8 x i32> %233, splat (i32 16)
  %235 = and <8 x i32> %234, splat (i32 1)
  %236 = add nuw nsw <8 x i32> %235, splat (i32 32767)
  %237 = fcmp uno <8 x float> %wide.load5.4, zeroinitializer
  %238 = and <8 x i32> %233, splat (i32 -8388608)
  %239 = or disjoint <8 x i32> %238, splat (i32 4194304)
  %240 = add <8 x i32> %236, %233
  %241 = select <8 x i1> %237, <8 x i32> %239, <8 x i32> %240
  %242 = lshr <8 x i32> %241, splat (i32 16)
  %243 = trunc nuw <8 x i32> %242 to <8 x i16>
  %244 = bitcast <8 x float> %wide.load6.4 to <8 x i32>
  %245 = lshr <8 x i32> %244, splat (i32 16)
  %246 = and <8 x i32> %245, splat (i32 1)
  %247 = add nuw nsw <8 x i32> %246, splat (i32 32767)
  %248 = fcmp uno <8 x float> %wide.load6.4, zeroinitializer
  %249 = and <8 x i32> %244, splat (i32 -8388608)
  %250 = or disjoint <8 x i32> %249, splat (i32 4194304)
  %251 = add <8 x i32> %247, %244
  %252 = select <8 x i1> %248, <8 x i32> %250, <8 x i32> %251
  %253 = lshr <8 x i32> %252, splat (i32 16)
  %254 = trunc nuw <8 x i32> %253 to <8 x i16>
  %255 = getelementptr inbounds nuw i8, ptr %arg1, i64 256
  %256 = getelementptr inbounds nuw i8, ptr %arg1, i64 272
  %257 = getelementptr inbounds nuw i8, ptr %arg1, i64 288
  %258 = getelementptr inbounds nuw i8, ptr %arg1, i64 304
  store <8 x i16> %221, ptr %255, align 64, !alias.scope !7
  store <8 x i16> %232, ptr %256, align 16, !alias.scope !7
  store <8 x i16> %243, ptr %257, align 32, !alias.scope !7
  store <8 x i16> %254, ptr %258, align 16, !alias.scope !7
  %259 = getelementptr inbounds nuw i8, ptr %arg0, i64 640
  %260 = getelementptr inbounds nuw i8, ptr %arg0, i64 672
  %261 = getelementptr inbounds nuw i8, ptr %arg0, i64 704
  %262 = getelementptr inbounds nuw i8, ptr %arg0, i64 736
  %wide.load.5 = load <8 x float>, ptr %259, align 64, !invariant.load !3, !noalias !7
  %wide.load4.5 = load <8 x float>, ptr %260, align 32, !invariant.load !3, !noalias !7
  %wide.load5.5 = load <8 x float>, ptr %261, align 64, !invariant.load !3, !noalias !7
  %wide.load6.5 = load <8 x float>, ptr %262, align 32, !invariant.load !3, !noalias !7
  %263 = bitcast <8 x float> %wide.load.5 to <8 x i32>
  %264 = lshr <8 x i32> %263, splat (i32 16)
  %265 = and <8 x i32> %264, splat (i32 1)
  %266 = add nuw nsw <8 x i32> %265, splat (i32 32767)
  %267 = fcmp uno <8 x float> %wide.load.5, zeroinitializer
  %268 = and <8 x i32> %263, splat (i32 -8388608)
  %269 = or disjoint <8 x i32> %268, splat (i32 4194304)
  %270 = add <8 x i32> %266, %263
  %271 = select <8 x i1> %267, <8 x i32> %269, <8 x i32> %270
  %272 = lshr <8 x i32> %271, splat (i32 16)
  %273 = trunc nuw <8 x i32> %272 to <8 x i16>
  %274 = bitcast <8 x float> %wide.load4.5 to <8 x i32>
  %275 = lshr <8 x i32> %274, splat (i32 16)
  %276 = and <8 x i32> %275, splat (i32 1)
  %277 = add nuw nsw <8 x i32> %276, splat (i32 32767)
  %278 = fcmp uno <8 x float> %wide.load4.5, zeroinitializer
  %279 = and <8 x i32> %274, splat (i32 -8388608)
  %280 = or disjoint <8 x i32> %279, splat (i32 4194304)
  %281 = add <8 x i32> %277, %274
  %282 = select <8 x i1> %278, <8 x i32> %280, <8 x i32> %281
  %283 = lshr <8 x i32> %282, splat (i32 16)
  %284 = trunc nuw <8 x i32> %283 to <8 x i16>
  %285 = bitcast <8 x float> %wide.load5.5 to <8 x i32>
  %286 = lshr <8 x i32> %285, splat (i32 16)
  %287 = and <8 x i32> %286, splat (i32 1)
  %288 = add nuw nsw <8 x i32> %287, splat (i32 32767)
  %289 = fcmp uno <8 x float> %wide.load5.5, zeroinitializer
  %290 = and <8 x i32> %285, splat (i32 -8388608)
  %291 = or disjoint <8 x i32> %290, splat (i32 4194304)
  %292 = add <8 x i32> %288, %285
  %293 = select <8 x i1> %289, <8 x i32> %291, <8 x i32> %292
  %294 = lshr <8 x i32> %293, splat (i32 16)
  %295 = trunc nuw <8 x i32> %294 to <8 x i16>
  %296 = bitcast <8 x float> %wide.load6.5 to <8 x i32>
  %297 = lshr <8 x i32> %296, splat (i32 16)
  %298 = and <8 x i32> %297, splat (i32 1)
  %299 = add nuw nsw <8 x i32> %298, splat (i32 32767)
  %300 = fcmp uno <8 x float> %wide.load6.5, zeroinitializer
  %301 = and <8 x i32> %296, splat (i32 -8388608)
  %302 = or disjoint <8 x i32> %301, splat (i32 4194304)
  %303 = add <8 x i32> %299, %296
  %304 = select <8 x i1> %300, <8 x i32> %302, <8 x i32> %303
  %305 = lshr <8 x i32> %304, splat (i32 16)
  %306 = trunc nuw <8 x i32> %305 to <8 x i16>
  %307 = getelementptr inbounds nuw i8, ptr %arg1, i64 320
  %308 = getelementptr inbounds nuw i8, ptr %arg1, i64 336
  %309 = getelementptr inbounds nuw i8, ptr %arg1, i64 352
  %310 = getelementptr inbounds nuw i8, ptr %arg1, i64 368
  store <8 x i16> %273, ptr %307, align 64, !alias.scope !7
  store <8 x i16> %284, ptr %308, align 16, !alias.scope !7
  store <8 x i16> %295, ptr %309, align 32, !alias.scope !7
  store <8 x i16> %306, ptr %310, align 16, !alias.scope !7
  %311 = getelementptr inbounds nuw i8, ptr %arg0, i64 768
  %312 = getelementptr inbounds nuw i8, ptr %arg0, i64 800
  %313 = getelementptr inbounds nuw i8, ptr %arg0, i64 832
  %314 = getelementptr inbounds nuw i8, ptr %arg0, i64 864
  %wide.load.6 = load <8 x float>, ptr %311, align 64, !invariant.load !3, !noalias !7
  %wide.load4.6 = load <8 x float>, ptr %312, align 32, !invariant.load !3, !noalias !7
  %wide.load5.6 = load <8 x float>, ptr %313, align 64, !invariant.load !3, !noalias !7
  %wide.load6.6 = load <8 x float>, ptr %314, align 32, !invariant.load !3, !noalias !7
  %315 = bitcast <8 x float> %wide.load.6 to <8 x i32>
  %316 = lshr <8 x i32> %315, splat (i32 16)
  %317 = and <8 x i32> %316, splat (i32 1)
  %318 = add nuw nsw <8 x i32> %317, splat (i32 32767)
  %319 = fcmp uno <8 x float> %wide.load.6, zeroinitializer
  %320 = and <8 x i32> %315, splat (i32 -8388608)
  %321 = or disjoint <8 x i32> %320, splat (i32 4194304)
  %322 = add <8 x i32> %318, %315
  %323 = select <8 x i1> %319, <8 x i32> %321, <8 x i32> %322
  %324 = lshr <8 x i32> %323, splat (i32 16)
  %325 = trunc nuw <8 x i32> %324 to <8 x i16>
  %326 = bitcast <8 x float> %wide.load4.6 to <8 x i32>
  %327 = lshr <8 x i32> %326, splat (i32 16)
  %328 = and <8 x i32> %327, splat (i32 1)
  %329 = add nuw nsw <8 x i32> %328, splat (i32 32767)
  %330 = fcmp uno <8 x float> %wide.load4.6, zeroinitializer
  %331 = and <8 x i32> %326, splat (i32 -8388608)
  %332 = or disjoint <8 x i32> %331, splat (i32 4194304)
  %333 = add <8 x i32> %329, %326
  %334 = select <8 x i1> %330, <8 x i32> %332, <8 x i32> %333
  %335 = lshr <8 x i32> %334, splat (i32 16)
  %336 = trunc nuw <8 x i32> %335 to <8 x i16>
  %337 = bitcast <8 x float> %wide.load5.6 to <8 x i32>
  %338 = lshr <8 x i32> %337, splat (i32 16)
  %339 = and <8 x i32> %338, splat (i32 1)
  %340 = add nuw nsw <8 x i32> %339, splat (i32 32767)
  %341 = fcmp uno <8 x float> %wide.load5.6, zeroinitializer
  %342 = and <8 x i32> %337, splat (i32 -8388608)
  %343 = or disjoint <8 x i32> %342, splat (i32 4194304)
  %344 = add <8 x i32> %340, %337
  %345 = select <8 x i1> %341, <8 x i32> %343, <8 x i32> %344
  %346 = lshr <8 x i32> %345, splat (i32 16)
  %347 = trunc nuw <8 x i32> %346 to <8 x i16>
  %348 = bitcast <8 x float> %wide.load6.6 to <8 x i32>
  %349 = lshr <8 x i32> %348, splat (i32 16)
  %350 = and <8 x i32> %349, splat (i32 1)
  %351 = add nuw nsw <8 x i32> %350, splat (i32 32767)
  %352 = fcmp uno <8 x float> %wide.load6.6, zeroinitializer
  %353 = and <8 x i32> %348, splat (i32 -8388608)
  %354 = or disjoint <8 x i32> %353, splat (i32 4194304)
  %355 = add <8 x i32> %351, %348
  %356 = select <8 x i1> %352, <8 x i32> %354, <8 x i32> %355
  %357 = lshr <8 x i32> %356, splat (i32 16)
  %358 = trunc nuw <8 x i32> %357 to <8 x i16>
  %359 = getelementptr inbounds nuw i8, ptr %arg1, i64 384
  %360 = getelementptr inbounds nuw i8, ptr %arg1, i64 400
  %361 = getelementptr inbounds nuw i8, ptr %arg1, i64 416
  %362 = getelementptr inbounds nuw i8, ptr %arg1, i64 432
  store <8 x i16> %325, ptr %359, align 64, !alias.scope !7
  store <8 x i16> %336, ptr %360, align 16, !alias.scope !7
  store <8 x i16> %347, ptr %361, align 32, !alias.scope !7
  store <8 x i16> %358, ptr %362, align 16, !alias.scope !7
  %363 = getelementptr inbounds nuw i8, ptr %arg0, i64 896
  %364 = getelementptr inbounds nuw i8, ptr %arg0, i64 928
  %365 = getelementptr inbounds nuw i8, ptr %arg0, i64 960
  %366 = getelementptr inbounds nuw i8, ptr %arg0, i64 992
  %wide.load.7 = load <8 x float>, ptr %363, align 64, !invariant.load !3, !noalias !7
  %wide.load4.7 = load <8 x float>, ptr %364, align 32, !invariant.load !3, !noalias !7
  %wide.load5.7 = load <8 x float>, ptr %365, align 64, !invariant.load !3, !noalias !7
  %wide.load6.7 = load <8 x float>, ptr %366, align 32, !invariant.load !3, !noalias !7
  %367 = bitcast <8 x float> %wide.load.7 to <8 x i32>
  %368 = lshr <8 x i32> %367, splat (i32 16)
  %369 = and <8 x i32> %368, splat (i32 1)
  %370 = add nuw nsw <8 x i32> %369, splat (i32 32767)
  %371 = fcmp uno <8 x float> %wide.load.7, zeroinitializer
  %372 = and <8 x i32> %367, splat (i32 -8388608)
  %373 = or disjoint <8 x i32> %372, splat (i32 4194304)
  %374 = add <8 x i32> %370, %367
  %375 = select <8 x i1> %371, <8 x i32> %373, <8 x i32> %374
  %376 = lshr <8 x i32> %375, splat (i32 16)
  %377 = trunc nuw <8 x i32> %376 to <8 x i16>
  %378 = bitcast <8 x float> %wide.load4.7 to <8 x i32>
  %379 = lshr <8 x i32> %378, splat (i32 16)
  %380 = and <8 x i32> %379, splat (i32 1)
  %381 = add nuw nsw <8 x i32> %380, splat (i32 32767)
  %382 = fcmp uno <8 x float> %wide.load4.7, zeroinitializer
  %383 = and <8 x i32> %378, splat (i32 -8388608)
  %384 = or disjoint <8 x i32> %383, splat (i32 4194304)
  %385 = add <8 x i32> %381, %378
  %386 = select <8 x i1> %382, <8 x i32> %384, <8 x i32> %385
  %387 = lshr <8 x i32> %386, splat (i32 16)
  %388 = trunc nuw <8 x i32> %387 to <8 x i16>
  %389 = bitcast <8 x float> %wide.load5.7 to <8 x i32>
  %390 = lshr <8 x i32> %389, splat (i32 16)
  %391 = and <8 x i32> %390, splat (i32 1)
  %392 = add nuw nsw <8 x i32> %391, splat (i32 32767)
  %393 = fcmp uno <8 x float> %wide.load5.7, zeroinitializer
  %394 = and <8 x i32> %389, splat (i32 -8388608)
  %395 = or disjoint <8 x i32> %394, splat (i32 4194304)
  %396 = add <8 x i32> %392, %389
  %397 = select <8 x i1> %393, <8 x i32> %395, <8 x i32> %396
  %398 = lshr <8 x i32> %397, splat (i32 16)
  %399 = trunc nuw <8 x i32> %398 to <8 x i16>
  %400 = bitcast <8 x float> %wide.load6.7 to <8 x i32>
  %401 = lshr <8 x i32> %400, splat (i32 16)
  %402 = and <8 x i32> %401, splat (i32 1)
  %403 = add nuw nsw <8 x i32> %402, splat (i32 32767)
  %404 = fcmp uno <8 x float> %wide.load6.7, zeroinitializer
  %405 = and <8 x i32> %400, splat (i32 -8388608)
  %406 = or disjoint <8 x i32> %405, splat (i32 4194304)
  %407 = add <8 x i32> %403, %400
  %408 = select <8 x i1> %404, <8 x i32> %406, <8 x i32> %407
  %409 = lshr <8 x i32> %408, splat (i32 16)
  %410 = trunc nuw <8 x i32> %409 to <8 x i16>
  %411 = getelementptr inbounds nuw i8, ptr %arg1, i64 448
  %412 = getelementptr inbounds nuw i8, ptr %arg1, i64 464
  %413 = getelementptr inbounds nuw i8, ptr %arg1, i64 480
  %414 = getelementptr inbounds nuw i8, ptr %arg1, i64 496
  store <8 x i16> %377, ptr %411, align 64, !alias.scope !7
  store <8 x i16> %388, ptr %412, align 16, !alias.scope !7
  store <8 x i16> %399, ptr %413, align 32, !alias.scope !7
  store <8 x i16> %410, ptr %414, align 16, !alias.scope !7
  %415 = getelementptr inbounds nuw i8, ptr %arg0, i64 1024
  %416 = getelementptr inbounds nuw i8, ptr %arg0, i64 1056
  %417 = getelementptr inbounds nuw i8, ptr %arg0, i64 1088
  %418 = getelementptr inbounds nuw i8, ptr %arg0, i64 1120
  %wide.load.8 = load <8 x float>, ptr %415, align 64, !invariant.load !3, !noalias !7
  %wide.load4.8 = load <8 x float>, ptr %416, align 32, !invariant.load !3, !noalias !7
  %wide.load5.8 = load <8 x float>, ptr %417, align 64, !invariant.load !3, !noalias !7
  %wide.load6.8 = load <8 x float>, ptr %418, align 32, !invariant.load !3, !noalias !7
  %419 = bitcast <8 x float> %wide.load.8 to <8 x i32>
  %420 = lshr <8 x i32> %419, splat (i32 16)
  %421 = and <8 x i32> %420, splat (i32 1)
  %422 = add nuw nsw <8 x i32> %421, splat (i32 32767)
  %423 = fcmp uno <8 x float> %wide.load.8, zeroinitializer
  %424 = and <8 x i32> %419, splat (i32 -8388608)
  %425 = or disjoint <8 x i32> %424, splat (i32 4194304)
  %426 = add <8 x i32> %422, %419
  %427 = select <8 x i1> %423, <8 x i32> %425, <8 x i32> %426
  %428 = lshr <8 x i32> %427, splat (i32 16)
  %429 = trunc nuw <8 x i32> %428 to <8 x i16>
  %430 = bitcast <8 x float> %wide.load4.8 to <8 x i32>
  %431 = lshr <8 x i32> %430, splat (i32 16)
  %432 = and <8 x i32> %431, splat (i32 1)
  %433 = add nuw nsw <8 x i32> %432, splat (i32 32767)
  %434 = fcmp uno <8 x float> %wide.load4.8, zeroinitializer
  %435 = and <8 x i32> %430, splat (i32 -8388608)
  %436 = or disjoint <8 x i32> %435, splat (i32 4194304)
  %437 = add <8 x i32> %433, %430
  %438 = select <8 x i1> %434, <8 x i32> %436, <8 x i32> %437
  %439 = lshr <8 x i32> %438, splat (i32 16)
  %440 = trunc nuw <8 x i32> %439 to <8 x i16>
  %441 = bitcast <8 x float> %wide.load5.8 to <8 x i32>
  %442 = lshr <8 x i32> %441, splat (i32 16)
  %443 = and <8 x i32> %442, splat (i32 1)
  %444 = add nuw nsw <8 x i32> %443, splat (i32 32767)
  %445 = fcmp uno <8 x float> %wide.load5.8, zeroinitializer
  %446 = and <8 x i32> %441, splat (i32 -8388608)
  %447 = or disjoint <8 x i32> %446, splat (i32 4194304)
  %448 = add <8 x i32> %444, %441
  %449 = select <8 x i1> %445, <8 x i32> %447, <8 x i32> %448
  %450 = lshr <8 x i32> %449, splat (i32 16)
  %451 = trunc nuw <8 x i32> %450 to <8 x i16>
  %452 = bitcast <8 x float> %wide.load6.8 to <8 x i32>
  %453 = lshr <8 x i32> %452, splat (i32 16)
  %454 = and <8 x i32> %453, splat (i32 1)
  %455 = add nuw nsw <8 x i32> %454, splat (i32 32767)
  %456 = fcmp uno <8 x float> %wide.load6.8, zeroinitializer
  %457 = and <8 x i32> %452, splat (i32 -8388608)
  %458 = or disjoint <8 x i32> %457, splat (i32 4194304)
  %459 = add <8 x i32> %455, %452
  %460 = select <8 x i1> %456, <8 x i32> %458, <8 x i32> %459
  %461 = lshr <8 x i32> %460, splat (i32 16)
  %462 = trunc nuw <8 x i32> %461 to <8 x i16>
  %463 = getelementptr inbounds nuw i8, ptr %arg1, i64 512
  %464 = getelementptr inbounds nuw i8, ptr %arg1, i64 528
  %465 = getelementptr inbounds nuw i8, ptr %arg1, i64 544
  %466 = getelementptr inbounds nuw i8, ptr %arg1, i64 560
  store <8 x i16> %429, ptr %463, align 64, !alias.scope !7
  store <8 x i16> %440, ptr %464, align 16, !alias.scope !7
  store <8 x i16> %451, ptr %465, align 32, !alias.scope !7
  store <8 x i16> %462, ptr %466, align 16, !alias.scope !7
  %467 = getelementptr inbounds nuw i8, ptr %arg0, i64 1152
  %468 = getelementptr inbounds nuw i8, ptr %arg0, i64 1184
  %469 = getelementptr inbounds nuw i8, ptr %arg0, i64 1216
  %470 = getelementptr inbounds nuw i8, ptr %arg0, i64 1248
  %wide.load.9 = load <8 x float>, ptr %467, align 64, !invariant.load !3, !noalias !7
  %wide.load4.9 = load <8 x float>, ptr %468, align 32, !invariant.load !3, !noalias !7
  %wide.load5.9 = load <8 x float>, ptr %469, align 64, !invariant.load !3, !noalias !7
  %wide.load6.9 = load <8 x float>, ptr %470, align 32, !invariant.load !3, !noalias !7
  %471 = bitcast <8 x float> %wide.load.9 to <8 x i32>
  %472 = lshr <8 x i32> %471, splat (i32 16)
  %473 = and <8 x i32> %472, splat (i32 1)
  %474 = add nuw nsw <8 x i32> %473, splat (i32 32767)
  %475 = fcmp uno <8 x float> %wide.load.9, zeroinitializer
  %476 = and <8 x i32> %471, splat (i32 -8388608)
  %477 = or disjoint <8 x i32> %476, splat (i32 4194304)
  %478 = add <8 x i32> %474, %471
  %479 = select <8 x i1> %475, <8 x i32> %477, <8 x i32> %478
  %480 = lshr <8 x i32> %479, splat (i32 16)
  %481 = trunc nuw <8 x i32> %480 to <8 x i16>
  %482 = bitcast <8 x float> %wide.load4.9 to <8 x i32>
  %483 = lshr <8 x i32> %482, splat (i32 16)
  %484 = and <8 x i32> %483, splat (i32 1)
  %485 = add nuw nsw <8 x i32> %484, splat (i32 32767)
  %486 = fcmp uno <8 x float> %wide.load4.9, zeroinitializer
  %487 = and <8 x i32> %482, splat (i32 -8388608)
  %488 = or disjoint <8 x i32> %487, splat (i32 4194304)
  %489 = add <8 x i32> %485, %482
  %490 = select <8 x i1> %486, <8 x i32> %488, <8 x i32> %489
  %491 = lshr <8 x i32> %490, splat (i32 16)
  %492 = trunc nuw <8 x i32> %491 to <8 x i16>
  %493 = bitcast <8 x float> %wide.load5.9 to <8 x i32>
  %494 = lshr <8 x i32> %493, splat (i32 16)
  %495 = and <8 x i32> %494, splat (i32 1)
  %496 = add nuw nsw <8 x i32> %495, splat (i32 32767)
  %497 = fcmp uno <8 x float> %wide.load5.9, zeroinitializer
  %498 = and <8 x i32> %493, splat (i32 -8388608)
  %499 = or disjoint <8 x i32> %498, splat (i32 4194304)
  %500 = add <8 x i32> %496, %493
  %501 = select <8 x i1> %497, <8 x i32> %499, <8 x i32> %500
  %502 = lshr <8 x i32> %501, splat (i32 16)
  %503 = trunc nuw <8 x i32> %502 to <8 x i16>
  %504 = bitcast <8 x float> %wide.load6.9 to <8 x i32>
  %505 = lshr <8 x i32> %504, splat (i32 16)
  %506 = and <8 x i32> %505, splat (i32 1)
  %507 = add nuw nsw <8 x i32> %506, splat (i32 32767)
  %508 = fcmp uno <8 x float> %wide.load6.9, zeroinitializer
  %509 = and <8 x i32> %504, splat (i32 -8388608)
  %510 = or disjoint <8 x i32> %509, splat (i32 4194304)
  %511 = add <8 x i32> %507, %504
  %512 = select <8 x i1> %508, <8 x i32> %510, <8 x i32> %511
  %513 = lshr <8 x i32> %512, splat (i32 16)
  %514 = trunc nuw <8 x i32> %513 to <8 x i16>
  %515 = getelementptr inbounds nuw i8, ptr %arg1, i64 576
  %516 = getelementptr inbounds nuw i8, ptr %arg1, i64 592
  %517 = getelementptr inbounds nuw i8, ptr %arg1, i64 608
  %518 = getelementptr inbounds nuw i8, ptr %arg1, i64 624
  store <8 x i16> %481, ptr %515, align 64, !alias.scope !7
  store <8 x i16> %492, ptr %516, align 16, !alias.scope !7
  store <8 x i16> %503, ptr %517, align 32, !alias.scope !7
  store <8 x i16> %514, ptr %518, align 16, !alias.scope !7
  %519 = getelementptr inbounds nuw i8, ptr %arg0, i64 1280
  %520 = getelementptr inbounds nuw i8, ptr %arg0, i64 1312
  %521 = getelementptr inbounds nuw i8, ptr %arg0, i64 1344
  %522 = getelementptr inbounds nuw i8, ptr %arg0, i64 1376
  %wide.load.10 = load <8 x float>, ptr %519, align 64, !invariant.load !3, !noalias !7
  %wide.load4.10 = load <8 x float>, ptr %520, align 32, !invariant.load !3, !noalias !7
  %wide.load5.10 = load <8 x float>, ptr %521, align 64, !invariant.load !3, !noalias !7
  %wide.load6.10 = load <8 x float>, ptr %522, align 32, !invariant.load !3, !noalias !7
  %523 = bitcast <8 x float> %wide.load.10 to <8 x i32>
  %524 = lshr <8 x i32> %523, splat (i32 16)
  %525 = and <8 x i32> %524, splat (i32 1)
  %526 = add nuw nsw <8 x i32> %525, splat (i32 32767)
  %527 = fcmp uno <8 x float> %wide.load.10, zeroinitializer
  %528 = and <8 x i32> %523, splat (i32 -8388608)
  %529 = or disjoint <8 x i32> %528, splat (i32 4194304)
  %530 = add <8 x i32> %526, %523
  %531 = select <8 x i1> %527, <8 x i32> %529, <8 x i32> %530
  %532 = lshr <8 x i32> %531, splat (i32 16)
  %533 = trunc nuw <8 x i32> %532 to <8 x i16>
  %534 = bitcast <8 x float> %wide.load4.10 to <8 x i32>
  %535 = lshr <8 x i32> %534, splat (i32 16)
  %536 = and <8 x i32> %535, splat (i32 1)
  %537 = add nuw nsw <8 x i32> %536, splat (i32 32767)
  %538 = fcmp uno <8 x float> %wide.load4.10, zeroinitializer
  %539 = and <8 x i32> %534, splat (i32 -8388608)
  %540 = or disjoint <8 x i32> %539, splat (i32 4194304)
  %541 = add <8 x i32> %537, %534
  %542 = select <8 x i1> %538, <8 x i32> %540, <8 x i32> %541
  %543 = lshr <8 x i32> %542, splat (i32 16)
  %544 = trunc nuw <8 x i32> %543 to <8 x i16>
  %545 = bitcast <8 x float> %wide.load5.10 to <8 x i32>
  %546 = lshr <8 x i32> %545, splat (i32 16)
  %547 = and <8 x i32> %546, splat (i32 1)
  %548 = add nuw nsw <8 x i32> %547, splat (i32 32767)
  %549 = fcmp uno <8 x float> %wide.load5.10, zeroinitializer
  %550 = and <8 x i32> %545, splat (i32 -8388608)
  %551 = or disjoint <8 x i32> %550, splat (i32 4194304)
  %552 = add <8 x i32> %548, %545
  %553 = select <8 x i1> %549, <8 x i32> %551, <8 x i32> %552
  %554 = lshr <8 x i32> %553, splat (i32 16)
  %555 = trunc nuw <8 x i32> %554 to <8 x i16>
  %556 = bitcast <8 x float> %wide.load6.10 to <8 x i32>
  %557 = lshr <8 x i32> %556, splat (i32 16)
  %558 = and <8 x i32> %557, splat (i32 1)
  %559 = add nuw nsw <8 x i32> %558, splat (i32 32767)
  %560 = fcmp uno <8 x float> %wide.load6.10, zeroinitializer
  %561 = and <8 x i32> %556, splat (i32 -8388608)
  %562 = or disjoint <8 x i32> %561, splat (i32 4194304)
  %563 = add <8 x i32> %559, %556
  %564 = select <8 x i1> %560, <8 x i32> %562, <8 x i32> %563
  %565 = lshr <8 x i32> %564, splat (i32 16)
  %566 = trunc nuw <8 x i32> %565 to <8 x i16>
  %567 = getelementptr inbounds nuw i8, ptr %arg1, i64 640
  %568 = getelementptr inbounds nuw i8, ptr %arg1, i64 656
  %569 = getelementptr inbounds nuw i8, ptr %arg1, i64 672
  %570 = getelementptr inbounds nuw i8, ptr %arg1, i64 688
  store <8 x i16> %533, ptr %567, align 64, !alias.scope !7
  store <8 x i16> %544, ptr %568, align 16, !alias.scope !7
  store <8 x i16> %555, ptr %569, align 32, !alias.scope !7
  store <8 x i16> %566, ptr %570, align 16, !alias.scope !7
  %571 = getelementptr inbounds nuw i8, ptr %arg0, i64 1408
  %572 = getelementptr inbounds nuw i8, ptr %arg0, i64 1440
  %573 = getelementptr inbounds nuw i8, ptr %arg0, i64 1472
  %574 = getelementptr inbounds nuw i8, ptr %arg0, i64 1504
  %wide.load.11 = load <8 x float>, ptr %571, align 64, !invariant.load !3, !noalias !7
  %wide.load4.11 = load <8 x float>, ptr %572, align 32, !invariant.load !3, !noalias !7
  %wide.load5.11 = load <8 x float>, ptr %573, align 64, !invariant.load !3, !noalias !7
  %wide.load6.11 = load <8 x float>, ptr %574, align 32, !invariant.load !3, !noalias !7
  %575 = bitcast <8 x float> %wide.load.11 to <8 x i32>
  %576 = lshr <8 x i32> %575, splat (i32 16)
  %577 = and <8 x i32> %576, splat (i32 1)
  %578 = add nuw nsw <8 x i32> %577, splat (i32 32767)
  %579 = fcmp uno <8 x float> %wide.load.11, zeroinitializer
  %580 = and <8 x i32> %575, splat (i32 -8388608)
  %581 = or disjoint <8 x i32> %580, splat (i32 4194304)
  %582 = add <8 x i32> %578, %575
  %583 = select <8 x i1> %579, <8 x i32> %581, <8 x i32> %582
  %584 = lshr <8 x i32> %583, splat (i32 16)
  %585 = trunc nuw <8 x i32> %584 to <8 x i16>
  %586 = bitcast <8 x float> %wide.load4.11 to <8 x i32>
  %587 = lshr <8 x i32> %586, splat (i32 16)
  %588 = and <8 x i32> %587, splat (i32 1)
  %589 = add nuw nsw <8 x i32> %588, splat (i32 32767)
  %590 = fcmp uno <8 x float> %wide.load4.11, zeroinitializer
  %591 = and <8 x i32> %586, splat (i32 -8388608)
  %592 = or disjoint <8 x i32> %591, splat (i32 4194304)
  %593 = add <8 x i32> %589, %586
  %594 = select <8 x i1> %590, <8 x i32> %592, <8 x i32> %593
  %595 = lshr <8 x i32> %594, splat (i32 16)
  %596 = trunc nuw <8 x i32> %595 to <8 x i16>
  %597 = bitcast <8 x float> %wide.load5.11 to <8 x i32>
  %598 = lshr <8 x i32> %597, splat (i32 16)
  %599 = and <8 x i32> %598, splat (i32 1)
  %600 = add nuw nsw <8 x i32> %599, splat (i32 32767)
  %601 = fcmp uno <8 x float> %wide.load5.11, zeroinitializer
  %602 = and <8 x i32> %597, splat (i32 -8388608)
  %603 = or disjoint <8 x i32> %602, splat (i32 4194304)
  %604 = add <8 x i32> %600, %597
  %605 = select <8 x i1> %601, <8 x i32> %603, <8 x i32> %604
  %606 = lshr <8 x i32> %605, splat (i32 16)
  %607 = trunc nuw <8 x i32> %606 to <8 x i16>
  %608 = bitcast <8 x float> %wide.load6.11 to <8 x i32>
  %609 = lshr <8 x i32> %608, splat (i32 16)
  %610 = and <8 x i32> %609, splat (i32 1)
  %611 = add nuw nsw <8 x i32> %610, splat (i32 32767)
  %612 = fcmp uno <8 x float> %wide.load6.11, zeroinitializer
  %613 = and <8 x i32> %608, splat (i32 -8388608)
  %614 = or disjoint <8 x i32> %613, splat (i32 4194304)
  %615 = add <8 x i32> %611, %608
  %616 = select <8 x i1> %612, <8 x i32> %614, <8 x i32> %615
  %617 = lshr <8 x i32> %616, splat (i32 16)
  %618 = trunc nuw <8 x i32> %617 to <8 x i16>
  %619 = getelementptr inbounds nuw i8, ptr %arg1, i64 704
  %620 = getelementptr inbounds nuw i8, ptr %arg1, i64 720
  %621 = getelementptr inbounds nuw i8, ptr %arg1, i64 736
  %622 = getelementptr inbounds nuw i8, ptr %arg1, i64 752
  store <8 x i16> %585, ptr %619, align 64, !alias.scope !7
  store <8 x i16> %596, ptr %620, align 16, !alias.scope !7
  store <8 x i16> %607, ptr %621, align 32, !alias.scope !7
  store <8 x i16> %618, ptr %622, align 16, !alias.scope !7
  %623 = getelementptr inbounds nuw i8, ptr %arg0, i64 1536
  %624 = getelementptr inbounds nuw i8, ptr %arg0, i64 1568
  %625 = getelementptr inbounds nuw i8, ptr %arg0, i64 1600
  %626 = getelementptr inbounds nuw i8, ptr %arg0, i64 1632
  %wide.load.12 = load <8 x float>, ptr %623, align 64, !invariant.load !3, !noalias !7
  %wide.load4.12 = load <8 x float>, ptr %624, align 32, !invariant.load !3, !noalias !7
  %wide.load5.12 = load <8 x float>, ptr %625, align 64, !invariant.load !3, !noalias !7
  %wide.load6.12 = load <8 x float>, ptr %626, align 32, !invariant.load !3, !noalias !7
  %627 = bitcast <8 x float> %wide.load.12 to <8 x i32>
  %628 = lshr <8 x i32> %627, splat (i32 16)
  %629 = and <8 x i32> %628, splat (i32 1)
  %630 = add nuw nsw <8 x i32> %629, splat (i32 32767)
  %631 = fcmp uno <8 x float> %wide.load.12, zeroinitializer
  %632 = and <8 x i32> %627, splat (i32 -8388608)
  %633 = or disjoint <8 x i32> %632, splat (i32 4194304)
  %634 = add <8 x i32> %630, %627
  %635 = select <8 x i1> %631, <8 x i32> %633, <8 x i32> %634
  %636 = lshr <8 x i32> %635, splat (i32 16)
  %637 = trunc nuw <8 x i32> %636 to <8 x i16>
  %638 = bitcast <8 x float> %wide.load4.12 to <8 x i32>
  %639 = lshr <8 x i32> %638, splat (i32 16)
  %640 = and <8 x i32> %639, splat (i32 1)
  %641 = add nuw nsw <8 x i32> %640, splat (i32 32767)
  %642 = fcmp uno <8 x float> %wide.load4.12, zeroinitializer
  %643 = and <8 x i32> %638, splat (i32 -8388608)
  %644 = or disjoint <8 x i32> %643, splat (i32 4194304)
  %645 = add <8 x i32> %641, %638
  %646 = select <8 x i1> %642, <8 x i32> %644, <8 x i32> %645
  %647 = lshr <8 x i32> %646, splat (i32 16)
  %648 = trunc nuw <8 x i32> %647 to <8 x i16>
  %649 = bitcast <8 x float> %wide.load5.12 to <8 x i32>
  %650 = lshr <8 x i32> %649, splat (i32 16)
  %651 = and <8 x i32> %650, splat (i32 1)
  %652 = add nuw nsw <8 x i32> %651, splat (i32 32767)
  %653 = fcmp uno <8 x float> %wide.load5.12, zeroinitializer
  %654 = and <8 x i32> %649, splat (i32 -8388608)
  %655 = or disjoint <8 x i32> %654, splat (i32 4194304)
  %656 = add <8 x i32> %652, %649
  %657 = select <8 x i1> %653, <8 x i32> %655, <8 x i32> %656
  %658 = lshr <8 x i32> %657, splat (i32 16)
  %659 = trunc nuw <8 x i32> %658 to <8 x i16>
  %660 = bitcast <8 x float> %wide.load6.12 to <8 x i32>
  %661 = lshr <8 x i32> %660, splat (i32 16)
  %662 = and <8 x i32> %661, splat (i32 1)
  %663 = add nuw nsw <8 x i32> %662, splat (i32 32767)
  %664 = fcmp uno <8 x float> %wide.load6.12, zeroinitializer
  %665 = and <8 x i32> %660, splat (i32 -8388608)
  %666 = or disjoint <8 x i32> %665, splat (i32 4194304)
  %667 = add <8 x i32> %663, %660
  %668 = select <8 x i1> %664, <8 x i32> %666, <8 x i32> %667
  %669 = lshr <8 x i32> %668, splat (i32 16)
  %670 = trunc nuw <8 x i32> %669 to <8 x i16>
  %671 = getelementptr inbounds nuw i8, ptr %arg1, i64 768
  %672 = getelementptr inbounds nuw i8, ptr %arg1, i64 784
  %673 = getelementptr inbounds nuw i8, ptr %arg1, i64 800
  %674 = getelementptr inbounds nuw i8, ptr %arg1, i64 816
  store <8 x i16> %637, ptr %671, align 64, !alias.scope !7
  store <8 x i16> %648, ptr %672, align 16, !alias.scope !7
  store <8 x i16> %659, ptr %673, align 32, !alias.scope !7
  store <8 x i16> %670, ptr %674, align 16, !alias.scope !7
  %675 = getelementptr inbounds nuw i8, ptr %arg0, i64 1664
  %676 = getelementptr inbounds nuw i8, ptr %arg0, i64 1696
  %677 = getelementptr inbounds nuw i8, ptr %arg0, i64 1728
  %678 = getelementptr inbounds nuw i8, ptr %arg0, i64 1760
  %wide.load.13 = load <8 x float>, ptr %675, align 64, !invariant.load !3, !noalias !7
  %wide.load4.13 = load <8 x float>, ptr %676, align 32, !invariant.load !3, !noalias !7
  %wide.load5.13 = load <8 x float>, ptr %677, align 64, !invariant.load !3, !noalias !7
  %wide.load6.13 = load <8 x float>, ptr %678, align 32, !invariant.load !3, !noalias !7
  %679 = bitcast <8 x float> %wide.load.13 to <8 x i32>
  %680 = lshr <8 x i32> %679, splat (i32 16)
  %681 = and <8 x i32> %680, splat (i32 1)
  %682 = add nuw nsw <8 x i32> %681, splat (i32 32767)
  %683 = fcmp uno <8 x float> %wide.load.13, zeroinitializer
  %684 = and <8 x i32> %679, splat (i32 -8388608)
  %685 = or disjoint <8 x i32> %684, splat (i32 4194304)
  %686 = add <8 x i32> %682, %679
  %687 = select <8 x i1> %683, <8 x i32> %685, <8 x i32> %686
  %688 = lshr <8 x i32> %687, splat (i32 16)
  %689 = trunc nuw <8 x i32> %688 to <8 x i16>
  %690 = bitcast <8 x float> %wide.load4.13 to <8 x i32>
  %691 = lshr <8 x i32> %690, splat (i32 16)
  %692 = and <8 x i32> %691, splat (i32 1)
  %693 = add nuw nsw <8 x i32> %692, splat (i32 32767)
  %694 = fcmp uno <8 x float> %wide.load4.13, zeroinitializer
  %695 = and <8 x i32> %690, splat (i32 -8388608)
  %696 = or disjoint <8 x i32> %695, splat (i32 4194304)
  %697 = add <8 x i32> %693, %690
  %698 = select <8 x i1> %694, <8 x i32> %696, <8 x i32> %697
  %699 = lshr <8 x i32> %698, splat (i32 16)
  %700 = trunc nuw <8 x i32> %699 to <8 x i16>
  %701 = bitcast <8 x float> %wide.load5.13 to <8 x i32>
  %702 = lshr <8 x i32> %701, splat (i32 16)
  %703 = and <8 x i32> %702, splat (i32 1)
  %704 = add nuw nsw <8 x i32> %703, splat (i32 32767)
  %705 = fcmp uno <8 x float> %wide.load5.13, zeroinitializer
  %706 = and <8 x i32> %701, splat (i32 -8388608)
  %707 = or disjoint <8 x i32> %706, splat (i32 4194304)
  %708 = add <8 x i32> %704, %701
  %709 = select <8 x i1> %705, <8 x i32> %707, <8 x i32> %708
  %710 = lshr <8 x i32> %709, splat (i32 16)
  %711 = trunc nuw <8 x i32> %710 to <8 x i16>
  %712 = bitcast <8 x float> %wide.load6.13 to <8 x i32>
  %713 = lshr <8 x i32> %712, splat (i32 16)
  %714 = and <8 x i32> %713, splat (i32 1)
  %715 = add nuw nsw <8 x i32> %714, splat (i32 32767)
  %716 = fcmp uno <8 x float> %wide.load6.13, zeroinitializer
  %717 = and <8 x i32> %712, splat (i32 -8388608)
  %718 = or disjoint <8 x i32> %717, splat (i32 4194304)
  %719 = add <8 x i32> %715, %712
  %720 = select <8 x i1> %716, <8 x i32> %718, <8 x i32> %719
  %721 = lshr <8 x i32> %720, splat (i32 16)
  %722 = trunc nuw <8 x i32> %721 to <8 x i16>
  %723 = getelementptr inbounds nuw i8, ptr %arg1, i64 832
  %724 = getelementptr inbounds nuw i8, ptr %arg1, i64 848
  %725 = getelementptr inbounds nuw i8, ptr %arg1, i64 864
  %726 = getelementptr inbounds nuw i8, ptr %arg1, i64 880
  store <8 x i16> %689, ptr %723, align 64, !alias.scope !7
  store <8 x i16> %700, ptr %724, align 16, !alias.scope !7
  store <8 x i16> %711, ptr %725, align 32, !alias.scope !7
  store <8 x i16> %722, ptr %726, align 16, !alias.scope !7
  %727 = getelementptr inbounds nuw i8, ptr %arg0, i64 1792
  %728 = getelementptr inbounds nuw i8, ptr %arg0, i64 1824
  %729 = getelementptr inbounds nuw i8, ptr %arg0, i64 1856
  %730 = getelementptr inbounds nuw i8, ptr %arg0, i64 1888
  %wide.load.14 = load <8 x float>, ptr %727, align 64, !invariant.load !3, !noalias !7
  %wide.load4.14 = load <8 x float>, ptr %728, align 32, !invariant.load !3, !noalias !7
  %wide.load5.14 = load <8 x float>, ptr %729, align 64, !invariant.load !3, !noalias !7
  %wide.load6.14 = load <8 x float>, ptr %730, align 32, !invariant.load !3, !noalias !7
  %731 = bitcast <8 x float> %wide.load.14 to <8 x i32>
  %732 = lshr <8 x i32> %731, splat (i32 16)
  %733 = and <8 x i32> %732, splat (i32 1)
  %734 = add nuw nsw <8 x i32> %733, splat (i32 32767)
  %735 = fcmp uno <8 x float> %wide.load.14, zeroinitializer
  %736 = and <8 x i32> %731, splat (i32 -8388608)
  %737 = or disjoint <8 x i32> %736, splat (i32 4194304)
  %738 = add <8 x i32> %734, %731
  %739 = select <8 x i1> %735, <8 x i32> %737, <8 x i32> %738
  %740 = lshr <8 x i32> %739, splat (i32 16)
  %741 = trunc nuw <8 x i32> %740 to <8 x i16>
  %742 = bitcast <8 x float> %wide.load4.14 to <8 x i32>
  %743 = lshr <8 x i32> %742, splat (i32 16)
  %744 = and <8 x i32> %743, splat (i32 1)
  %745 = add nuw nsw <8 x i32> %744, splat (i32 32767)
  %746 = fcmp uno <8 x float> %wide.load4.14, zeroinitializer
  %747 = and <8 x i32> %742, splat (i32 -8388608)
  %748 = or disjoint <8 x i32> %747, splat (i32 4194304)
  %749 = add <8 x i32> %745, %742
  %750 = select <8 x i1> %746, <8 x i32> %748, <8 x i32> %749
  %751 = lshr <8 x i32> %750, splat (i32 16)
  %752 = trunc nuw <8 x i32> %751 to <8 x i16>
  %753 = bitcast <8 x float> %wide.load5.14 to <8 x i32>
  %754 = lshr <8 x i32> %753, splat (i32 16)
  %755 = and <8 x i32> %754, splat (i32 1)
  %756 = add nuw nsw <8 x i32> %755, splat (i32 32767)
  %757 = fcmp uno <8 x float> %wide.load5.14, zeroinitializer
  %758 = and <8 x i32> %753, splat (i32 -8388608)
  %759 = or disjoint <8 x i32> %758, splat (i32 4194304)
  %760 = add <8 x i32> %756, %753
  %761 = select <8 x i1> %757, <8 x i32> %759, <8 x i32> %760
  %762 = lshr <8 x i32> %761, splat (i32 16)
  %763 = trunc nuw <8 x i32> %762 to <8 x i16>
  %764 = bitcast <8 x float> %wide.load6.14 to <8 x i32>
  %765 = lshr <8 x i32> %764, splat (i32 16)
  %766 = and <8 x i32> %765, splat (i32 1)
  %767 = add nuw nsw <8 x i32> %766, splat (i32 32767)
  %768 = fcmp uno <8 x float> %wide.load6.14, zeroinitializer
  %769 = and <8 x i32> %764, splat (i32 -8388608)
  %770 = or disjoint <8 x i32> %769, splat (i32 4194304)
  %771 = add <8 x i32> %767, %764
  %772 = select <8 x i1> %768, <8 x i32> %770, <8 x i32> %771
  %773 = lshr <8 x i32> %772, splat (i32 16)
  %774 = trunc nuw <8 x i32> %773 to <8 x i16>
  %775 = getelementptr inbounds nuw i8, ptr %arg1, i64 896
  %776 = getelementptr inbounds nuw i8, ptr %arg1, i64 912
  %777 = getelementptr inbounds nuw i8, ptr %arg1, i64 928
  %778 = getelementptr inbounds nuw i8, ptr %arg1, i64 944
  store <8 x i16> %741, ptr %775, align 64, !alias.scope !7
  store <8 x i16> %752, ptr %776, align 16, !alias.scope !7
  store <8 x i16> %763, ptr %777, align 32, !alias.scope !7
  store <8 x i16> %774, ptr %778, align 16, !alias.scope !7
  ret ptr null
}

attributes #0 = { uwtable "frame-pointer"="all" "prefer-vector-width"="256" }

!xla_cpu_memory_region_name = !{!0, !1}
!llvm.module.flags = !{!2}

!0 = !{!"xla_cpu_emitter__elemental_kernel_emitter__hlo_opcode__convert"}
!1 = !{!"ir_emitter"}
!2 = !{i32 1, !"xla_dylib_index", i64 0}
!3 = !{}
!4 = !{i64 960}
!5 = !{i64 64}
!6 = !{i64 1920}
!7 = !{!8}
!8 = !{!"result slice: {index:1, offset:0, size:960}", !9}
!9 = !{!"XLA host kernel convert_element_type.1_kernel AA domain"}
