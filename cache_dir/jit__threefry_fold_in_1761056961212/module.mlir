#loc1 = loc("key")
#loc2 = loc("data")
#loc3 = loc("/home/eporat/benchmarking_qwen_omni_tpu/.venv/lib/python3.11/site-packages/flax/nnx/rnglib.py":76:10 to :60)
#loc4 = loc("/home/eporat/benchmarking_qwen_omni_tpu/.venv/lib/python3.11/site-packages/tpu_inference/runner/tpu_jax_runner.py":304:52 to :60)
#loc5 = loc("/home/eporat/benchmarking_qwen_omni_tpu/.venv/lib/python3.11/site-packages/tpu_inference/worker/tpu_worker_jax.py":229:8 to :38)
#loc6 = loc("/home/eporat/benchmarking_qwen_omni_tpu/.venv/lib/python3.11/site-packages/vllm/utils/__init__.py":2977:11 to :32)
#loc7 = loc("/home/eporat/benchmarking_qwen_omni_tpu/.venv/lib/python3.11/site-packages/vllm/executor/uniproc_executor.py":74:20 to :72)
#loc8 = loc("/home/eporat/benchmarking_qwen_omni_tpu/.venv/lib/python3.11/site-packages/vllm/executor/uniproc_executor.py":48:8 to :41)
#loc9 = loc("/home/eporat/benchmarking_qwen_omni_tpu/.venv/lib/python3.11/site-packages/vllm/executor/executor_base.py":54:8 to :29)
#loc10 = loc("/home/eporat/benchmarking_qwen_omni_tpu/.venv/lib/python3.11/site-packages/vllm/v1/engine/core.py":105:30 to :57)
#loc11 = loc("/home/eporat/benchmarking_qwen_omni_tpu/.venv/lib/python3.11/site-packages/vllm/v1/engine/core.py":555:12 to 557:13)
#loc12 = loc("/home/eporat/benchmarking_qwen_omni_tpu/.venv/lib/python3.11/site-packages/vllm/v1/engine/core.py":783:30 to :61)
#loc14 = loc("RngStream.__call__"(#loc3))
#loc15 = loc("TPUModelRunner.load_model"(#loc4))
#loc16 = loc("TPUWorker.load_model"(#loc5))
#loc17 = loc("run_method"(#loc6))
#loc18 = loc("UniProcExecutor.collective_rpc"(#loc7))
#loc19 = loc("UniProcExecutor._init_executor"(#loc8))
#loc20 = loc("ExecutorBase.__init__"(#loc9))
#loc21 = loc("EngineCore.__init__"(#loc10))
#loc22 = loc("EngineCoreProc.__init__"(#loc11))
#loc23 = loc("EngineCoreProc.run_engine_core"(#loc12))
#loc24 = loc(callsite(#loc22 at #loc23))
#loc25 = loc(callsite(#loc21 at #loc24))
#loc26 = loc(callsite(#loc20 at #loc25))
#loc27 = loc(callsite(#loc19 at #loc26))
#loc28 = loc(callsite(#loc18 at #loc27))
#loc29 = loc(callsite(#loc17 at #loc28))
#loc30 = loc(callsite(#loc16 at #loc29))
#loc31 = loc(callsite(#loc15 at #loc30))
#loc32 = loc(callsite(#loc14 at #loc31))
#loc40 = loc("jit(_threefry_fold_in)"(#loc32))
module @jit__threefry_fold_in attributes {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} {
  func.func public @main(%arg0: tensor<2xui32> loc("key"), %arg1: tensor<ui32> loc("data")) -> (tensor<2xui32> {jax.result_info = "result"}) {
    %c = stablehlo.constant dense<4294967295> : tensor<ui32> loc(#loc)
    %c_0 = stablehlo.constant dense<32> : tensor<ui32> loc(#loc)
    %0 = stablehlo.shift_right_logical %arg1, %c_0 : tensor<ui32> loc(#loc33)
    %1 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc34)
    %2 = stablehlo.and %arg1, %c : tensor<ui32> loc(#loc35)
    %3 = stablehlo.broadcast_in_dim %2, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc34)
    %4 = stablehlo.concatenate %1, %3, dim = 0 : (tensor<1xui32>, tensor<1xui32>) -> tensor<2xui32> loc(#loc36)
    %5 = stablehlo.slice %arg0 [0:1] : (tensor<2xui32>) -> tensor<1xui32> loc(#loc37)
    %6 = stablehlo.reshape %5 : (tensor<1xui32>) -> tensor<ui32> loc(#loc38)
    %7 = stablehlo.slice %arg0 [1:2] : (tensor<2xui32>) -> tensor<1xui32> loc(#loc37)
    %8 = stablehlo.reshape %7 : (tensor<1xui32>) -> tensor<ui32> loc(#loc38)
    %9 = stablehlo.slice %4 [0:1] : (tensor<2xui32>) -> tensor<1xui32> loc(#loc39)
    %10 = stablehlo.slice %4 [1:2] : (tensor<2xui32>) -> tensor<1xui32> loc(#loc39)
    %11:2 = call @threefry2x32(%6, %8, %9, %10) : (tensor<ui32>, tensor<ui32>, tensor<1xui32>, tensor<1xui32>) -> (tensor<1xui32>, tensor<1xui32>) loc(#loc40)
    %12 = stablehlo.concatenate %11#0, %11#1, dim = 0 : (tensor<1xui32>, tensor<1xui32>) -> tensor<2xui32> loc(#loc36)
    return %12 : tensor<2xui32> loc(#loc)
  } loc(#loc)
  func.func private @threefry2x32(%arg0: tensor<ui32> loc("jit(_threefry_fold_in)"(#loc32)), %arg1: tensor<ui32> loc("jit(_threefry_fold_in)"(#loc32)), %arg2: tensor<1xui32> loc("jit(_threefry_fold_in)"(#loc32)), %arg3: tensor<1xui32> loc("jit(_threefry_fold_in)"(#loc32))) -> (tensor<1xui32>, tensor<1xui32>) {
    %c = stablehlo.constant dense<5> : tensor<ui32> loc(#loc13)
    %c_0 = stablehlo.constant dense<4> : tensor<ui32> loc(#loc13)
    %c_1 = stablehlo.constant dense<2> : tensor<ui32> loc(#loc13)
    %c_2 = stablehlo.constant dense<8> : tensor<ui32> loc(#loc)
    %c_3 = stablehlo.constant dense<24> : tensor<ui32> loc(#loc)
    %c_4 = stablehlo.constant dense<16> : tensor<ui32> loc(#loc)
    %c_5 = stablehlo.constant dense<3> : tensor<ui32> loc(#loc)
    %c_6 = stablehlo.constant dense<29> : tensor<ui32> loc(#loc)
    %c_7 = stablehlo.constant dense<1> : tensor<ui32> loc(#loc13)
    %c_8 = stablehlo.constant dense<6> : tensor<ui32> loc(#loc)
    %c_9 = stablehlo.constant dense<26> : tensor<ui32> loc(#loc)
    %c_10 = stablehlo.constant dense<17> : tensor<ui32> loc(#loc)
    %c_11 = stablehlo.constant dense<15> : tensor<ui32> loc(#loc)
    %c_12 = stablehlo.constant dense<19> : tensor<ui32> loc(#loc)
    %c_13 = stablehlo.constant dense<13> : tensor<ui32> loc(#loc)
    %c_14 = stablehlo.constant dense<466688986> : tensor<ui32> loc(#loc13)
    %0 = stablehlo.xor %arg0, %arg1 : tensor<ui32> loc(#loc41)
    %1 = stablehlo.xor %0, %c_14 : tensor<ui32> loc(#loc41)
    %2 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc42)
    %3 = stablehlo.add %arg2, %2 : tensor<1xui32> loc(#loc42)
    %4 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc42)
    %5 = stablehlo.add %arg3, %4 : tensor<1xui32> loc(#loc42)
    %6 = stablehlo.add %3, %5 : tensor<1xui32> loc(#loc42)
    %7 = stablehlo.broadcast_in_dim %c_13, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc43)
    %8 = stablehlo.shift_left %5, %7 : tensor<1xui32> loc(#loc43)
    %9 = stablehlo.broadcast_in_dim %c_12, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc44)
    %10 = stablehlo.shift_right_logical %5, %9 : tensor<1xui32> loc(#loc44)
    %11 = stablehlo.or %8, %10 : tensor<1xui32> loc(#loc45)
    %12 = stablehlo.xor %6, %11 : tensor<1xui32> loc(#loc41)
    %13 = stablehlo.add %6, %12 : tensor<1xui32> loc(#loc42)
    %14 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc43)
    %15 = stablehlo.shift_left %12, %14 : tensor<1xui32> loc(#loc43)
    %16 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc44)
    %17 = stablehlo.shift_right_logical %12, %16 : tensor<1xui32> loc(#loc44)
    %18 = stablehlo.or %15, %17 : tensor<1xui32> loc(#loc45)
    %19 = stablehlo.xor %13, %18 : tensor<1xui32> loc(#loc41)
    %20 = stablehlo.add %13, %19 : tensor<1xui32> loc(#loc42)
    %21 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc43)
    %22 = stablehlo.shift_left %19, %21 : tensor<1xui32> loc(#loc43)
    %23 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc44)
    %24 = stablehlo.shift_right_logical %19, %23 : tensor<1xui32> loc(#loc44)
    %25 = stablehlo.or %22, %24 : tensor<1xui32> loc(#loc45)
    %26 = stablehlo.xor %20, %25 : tensor<1xui32> loc(#loc41)
    %27 = stablehlo.add %20, %26 : tensor<1xui32> loc(#loc42)
    %28 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc43)
    %29 = stablehlo.shift_left %26, %28 : tensor<1xui32> loc(#loc43)
    %30 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc44)
    %31 = stablehlo.shift_right_logical %26, %30 : tensor<1xui32> loc(#loc44)
    %32 = stablehlo.or %29, %31 : tensor<1xui32> loc(#loc45)
    %33 = stablehlo.xor %27, %32 : tensor<1xui32> loc(#loc41)
    %34 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc42)
    %35 = stablehlo.add %27, %34 : tensor<1xui32> loc(#loc42)
    %36 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc42)
    %37 = stablehlo.add %33, %36 : tensor<1xui32> loc(#loc42)
    %38 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc42)
    %39 = stablehlo.add %37, %38 : tensor<1xui32> loc(#loc42)
    %40 = stablehlo.add %35, %39 : tensor<1xui32> loc(#loc42)
    %41 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc43)
    %42 = stablehlo.shift_left %39, %41 : tensor<1xui32> loc(#loc43)
    %43 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc44)
    %44 = stablehlo.shift_right_logical %39, %43 : tensor<1xui32> loc(#loc44)
    %45 = stablehlo.or %42, %44 : tensor<1xui32> loc(#loc45)
    %46 = stablehlo.xor %40, %45 : tensor<1xui32> loc(#loc41)
    %47 = stablehlo.add %40, %46 : tensor<1xui32> loc(#loc42)
    %48 = stablehlo.broadcast_in_dim %c_6, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc43)
    %49 = stablehlo.shift_left %46, %48 : tensor<1xui32> loc(#loc43)
    %50 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc44)
    %51 = stablehlo.shift_right_logical %46, %50 : tensor<1xui32> loc(#loc44)
    %52 = stablehlo.or %49, %51 : tensor<1xui32> loc(#loc45)
    %53 = stablehlo.xor %47, %52 : tensor<1xui32> loc(#loc41)
    %54 = stablehlo.add %47, %53 : tensor<1xui32> loc(#loc42)
    %55 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc43)
    %56 = stablehlo.shift_left %53, %55 : tensor<1xui32> loc(#loc43)
    %57 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc44)
    %58 = stablehlo.shift_right_logical %53, %57 : tensor<1xui32> loc(#loc44)
    %59 = stablehlo.or %56, %58 : tensor<1xui32> loc(#loc45)
    %60 = stablehlo.xor %54, %59 : tensor<1xui32> loc(#loc41)
    %61 = stablehlo.add %54, %60 : tensor<1xui32> loc(#loc42)
    %62 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc43)
    %63 = stablehlo.shift_left %60, %62 : tensor<1xui32> loc(#loc43)
    %64 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc44)
    %65 = stablehlo.shift_right_logical %60, %64 : tensor<1xui32> loc(#loc44)
    %66 = stablehlo.or %63, %65 : tensor<1xui32> loc(#loc45)
    %67 = stablehlo.xor %61, %66 : tensor<1xui32> loc(#loc41)
    %68 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc42)
    %69 = stablehlo.add %61, %68 : tensor<1xui32> loc(#loc42)
    %70 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc42)
    %71 = stablehlo.add %67, %70 : tensor<1xui32> loc(#loc42)
    %72 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc42)
    %73 = stablehlo.add %71, %72 : tensor<1xui32> loc(#loc42)
    %74 = stablehlo.add %69, %73 : tensor<1xui32> loc(#loc42)
    %75 = stablehlo.broadcast_in_dim %c_13, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc43)
    %76 = stablehlo.shift_left %73, %75 : tensor<1xui32> loc(#loc43)
    %77 = stablehlo.broadcast_in_dim %c_12, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc44)
    %78 = stablehlo.shift_right_logical %73, %77 : tensor<1xui32> loc(#loc44)
    %79 = stablehlo.or %76, %78 : tensor<1xui32> loc(#loc45)
    %80 = stablehlo.xor %74, %79 : tensor<1xui32> loc(#loc41)
    %81 = stablehlo.add %74, %80 : tensor<1xui32> loc(#loc42)
    %82 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc43)
    %83 = stablehlo.shift_left %80, %82 : tensor<1xui32> loc(#loc43)
    %84 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc44)
    %85 = stablehlo.shift_right_logical %80, %84 : tensor<1xui32> loc(#loc44)
    %86 = stablehlo.or %83, %85 : tensor<1xui32> loc(#loc45)
    %87 = stablehlo.xor %81, %86 : tensor<1xui32> loc(#loc41)
    %88 = stablehlo.add %81, %87 : tensor<1xui32> loc(#loc42)
    %89 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc43)
    %90 = stablehlo.shift_left %87, %89 : tensor<1xui32> loc(#loc43)
    %91 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc44)
    %92 = stablehlo.shift_right_logical %87, %91 : tensor<1xui32> loc(#loc44)
    %93 = stablehlo.or %90, %92 : tensor<1xui32> loc(#loc45)
    %94 = stablehlo.xor %88, %93 : tensor<1xui32> loc(#loc41)
    %95 = stablehlo.add %88, %94 : tensor<1xui32> loc(#loc42)
    %96 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc43)
    %97 = stablehlo.shift_left %94, %96 : tensor<1xui32> loc(#loc43)
    %98 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc44)
    %99 = stablehlo.shift_right_logical %94, %98 : tensor<1xui32> loc(#loc44)
    %100 = stablehlo.or %97, %99 : tensor<1xui32> loc(#loc45)
    %101 = stablehlo.xor %95, %100 : tensor<1xui32> loc(#loc41)
    %102 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc42)
    %103 = stablehlo.add %95, %102 : tensor<1xui32> loc(#loc42)
    %104 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc42)
    %105 = stablehlo.add %101, %104 : tensor<1xui32> loc(#loc42)
    %106 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc42)
    %107 = stablehlo.add %105, %106 : tensor<1xui32> loc(#loc42)
    %108 = stablehlo.add %103, %107 : tensor<1xui32> loc(#loc42)
    %109 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc43)
    %110 = stablehlo.shift_left %107, %109 : tensor<1xui32> loc(#loc43)
    %111 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc44)
    %112 = stablehlo.shift_right_logical %107, %111 : tensor<1xui32> loc(#loc44)
    %113 = stablehlo.or %110, %112 : tensor<1xui32> loc(#loc45)
    %114 = stablehlo.xor %108, %113 : tensor<1xui32> loc(#loc41)
    %115 = stablehlo.add %108, %114 : tensor<1xui32> loc(#loc42)
    %116 = stablehlo.broadcast_in_dim %c_6, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc43)
    %117 = stablehlo.shift_left %114, %116 : tensor<1xui32> loc(#loc43)
    %118 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc44)
    %119 = stablehlo.shift_right_logical %114, %118 : tensor<1xui32> loc(#loc44)
    %120 = stablehlo.or %117, %119 : tensor<1xui32> loc(#loc45)
    %121 = stablehlo.xor %115, %120 : tensor<1xui32> loc(#loc41)
    %122 = stablehlo.add %115, %121 : tensor<1xui32> loc(#loc42)
    %123 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc43)
    %124 = stablehlo.shift_left %121, %123 : tensor<1xui32> loc(#loc43)
    %125 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc44)
    %126 = stablehlo.shift_right_logical %121, %125 : tensor<1xui32> loc(#loc44)
    %127 = stablehlo.or %124, %126 : tensor<1xui32> loc(#loc45)
    %128 = stablehlo.xor %122, %127 : tensor<1xui32> loc(#loc41)
    %129 = stablehlo.add %122, %128 : tensor<1xui32> loc(#loc42)
    %130 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc43)
    %131 = stablehlo.shift_left %128, %130 : tensor<1xui32> loc(#loc43)
    %132 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc44)
    %133 = stablehlo.shift_right_logical %128, %132 : tensor<1xui32> loc(#loc44)
    %134 = stablehlo.or %131, %133 : tensor<1xui32> loc(#loc45)
    %135 = stablehlo.xor %129, %134 : tensor<1xui32> loc(#loc41)
    %136 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc42)
    %137 = stablehlo.add %129, %136 : tensor<1xui32> loc(#loc42)
    %138 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc42)
    %139 = stablehlo.add %135, %138 : tensor<1xui32> loc(#loc42)
    %140 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc42)
    %141 = stablehlo.add %139, %140 : tensor<1xui32> loc(#loc42)
    %142 = stablehlo.add %137, %141 : tensor<1xui32> loc(#loc42)
    %143 = stablehlo.broadcast_in_dim %c_13, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc43)
    %144 = stablehlo.shift_left %141, %143 : tensor<1xui32> loc(#loc43)
    %145 = stablehlo.broadcast_in_dim %c_12, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc44)
    %146 = stablehlo.shift_right_logical %141, %145 : tensor<1xui32> loc(#loc44)
    %147 = stablehlo.or %144, %146 : tensor<1xui32> loc(#loc45)
    %148 = stablehlo.xor %142, %147 : tensor<1xui32> loc(#loc41)
    %149 = stablehlo.add %142, %148 : tensor<1xui32> loc(#loc42)
    %150 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc43)
    %151 = stablehlo.shift_left %148, %150 : tensor<1xui32> loc(#loc43)
    %152 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc44)
    %153 = stablehlo.shift_right_logical %148, %152 : tensor<1xui32> loc(#loc44)
    %154 = stablehlo.or %151, %153 : tensor<1xui32> loc(#loc45)
    %155 = stablehlo.xor %149, %154 : tensor<1xui32> loc(#loc41)
    %156 = stablehlo.add %149, %155 : tensor<1xui32> loc(#loc42)
    %157 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc43)
    %158 = stablehlo.shift_left %155, %157 : tensor<1xui32> loc(#loc43)
    %159 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc44)
    %160 = stablehlo.shift_right_logical %155, %159 : tensor<1xui32> loc(#loc44)
    %161 = stablehlo.or %158, %160 : tensor<1xui32> loc(#loc45)
    %162 = stablehlo.xor %156, %161 : tensor<1xui32> loc(#loc41)
    %163 = stablehlo.add %156, %162 : tensor<1xui32> loc(#loc42)
    %164 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc43)
    %165 = stablehlo.shift_left %162, %164 : tensor<1xui32> loc(#loc43)
    %166 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc44)
    %167 = stablehlo.shift_right_logical %162, %166 : tensor<1xui32> loc(#loc44)
    %168 = stablehlo.or %165, %167 : tensor<1xui32> loc(#loc45)
    %169 = stablehlo.xor %163, %168 : tensor<1xui32> loc(#loc41)
    %170 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc42)
    %171 = stablehlo.add %163, %170 : tensor<1xui32> loc(#loc42)
    %172 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc42)
    %173 = stablehlo.add %169, %172 : tensor<1xui32> loc(#loc42)
    %174 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc42)
    %175 = stablehlo.add %173, %174 : tensor<1xui32> loc(#loc42)
    return %171, %175 : tensor<1xui32>, tensor<1xui32> loc(#loc40)
  } loc(#loc40)
} loc(#loc)
#loc = loc(unknown)
#loc13 = loc("threefry2x32")
#loc33 = loc("jit(_threefry_fold_in)/shift_right_logical"(#loc32))
#loc34 = loc("jit(_threefry_fold_in)/broadcast_in_dim"(#loc32))
#loc35 = loc("jit(_threefry_fold_in)/and"(#loc32))
#loc36 = loc("jit(_threefry_fold_in)/concatenate"(#loc32))
#loc37 = loc("jit(_threefry_fold_in)/slice"(#loc32))
#loc38 = loc("jit(_threefry_fold_in)/squeeze"(#loc32))
#loc39 = loc("jit(_threefry_fold_in)/split"(#loc32))
#loc41 = loc("xor"(#loc32))
#loc42 = loc("add"(#loc32))
#loc43 = loc("shift_left"(#loc32))
#loc44 = loc("shift_right_logical"(#loc32))
#loc45 = loc("or"(#loc32))
